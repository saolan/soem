package ec.com.tecnointel.soem.parametro.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Transient;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;

import ec.com.tecnointel.soem.contabilidad.modelo.PlanCuen;

/**
 * CajaPeri generated by hbm2java
 */
@Entity
@Table(name = "tran_plan_deta")
@NamedEntityGraph(name = "tranPlanDeta.Graph", attributeNodes = {
@NamedAttributeNode(value = "tranPlan") })
public class TranPlanDeta implements java.io.Serializable {

	private Integer tranPlanDetaId;
	private TranPlan tranPlan;
	private Integer planCuenId;
	private short factor;
	
	private PlanCuen planCuen;
	
	private static final long serialVersionUID = 6604536473941090966L;

	public TranPlanDeta() {
	}

	public TranPlanDeta(Integer tranPlanDetaId, TranPlan tranPlan, Integer planCuenId, short factor) {
		this.tranPlanDetaId = tranPlanDetaId;
		this.tranPlan = tranPlan;
		this.planCuenId = planCuenId;
		this.factor = factor;
	}

	@Id
	@TableGenerator(name = "idTranPlanDeta", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "tran_plan_deta", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idTranPlanDeta")
	@Column(name = "TRAN_PLAN_DETA_ID", unique = true, nullable = false)
	public Integer getTranPlanDetaId() {
		return tranPlanDetaId;
	}

	public void setTranPlanDetaId(Integer tranPlanDetaId) {
		this.tranPlanDetaId = tranPlanDetaId;
	}

	@Column(name = "PLAN_CUEN_ID", nullable = false)
	public Integer getPlanCuenId() {
		return planCuenId;
	}

	public void setPlanCuenId(Integer planCuenId) {
		this.planCuenId = planCuenId;
	}

	@Min(-1)
	@Max(1)
	@Column(name = "FACTOR", nullable = false)
	public short getFactor() {
		return factor;
	}

	public void setFactor(short factor) {
		this.factor = factor;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRAN_PLAN_ID", nullable = false)
	public TranPlan getTranPlan() {
		return tranPlan;
	}

	public void setTranPlan(TranPlan tranPlan) {
		this.tranPlan = tranPlan;
	}

	@Transient
	public PlanCuen getPlanCuen() {
		return planCuen;
	}

	public void setPlanCuen(PlanCuen planCuen) {
		this.planCuen = planCuen;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((tranPlanDetaId == null) ? 0 : tranPlanDetaId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TranPlanDeta other = (TranPlanDeta) obj;
		if (tranPlanDetaId == null) {
			if (other.tranPlanDetaId != null)
				return false;
		} else if (!tranPlanDetaId.equals(other.tranPlanDetaId))
			return false;
		return true;
	}

}