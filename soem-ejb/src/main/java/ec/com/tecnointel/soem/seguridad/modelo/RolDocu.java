package ec.com.tecnointel.soem.seguridad.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.NotNull;

import ec.com.tecnointel.soem.parametro.modelo.Documento;

/**
 * RolDocu generated by hbm2java
 */
@Entity
@Table(name = "rol_docu")
@NamedEntityGraph(name = "rolDocu.Graph", attributeNodes = {
@NamedAttributeNode(value = "rol"), 
@NamedAttributeNode(value = "documento") })
public class RolDocu implements java.io.Serializable {

	private Integer rolDocuId;
	private Documento documento;
	private Rol rol;
	private Boolean grabarImpr;
	private Boolean predet;
	private Boolean acceso;

	private static final long serialVersionUID = -1831686460823835769L;

	public RolDocu() {
	}

	public RolDocu(Integer rolDocuId, Documento documento, Rol rol, Boolean acceso, Boolean predet) {
		this.rolDocuId = rolDocuId;
		this.documento = documento;
		this.rol = rol;
		this.predet = predet;
		this.acceso = acceso;
	}

	@Id
	@TableGenerator(name = "idRolDocu", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "rol_docu", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idRolDocu")
	@Column(name = "ROL_DOCU_ID", unique = true, nullable = false)
	public Integer getRolDocuId() {
		return this.rolDocuId;
	}

	public void setRolDocuId(Integer rolDocuId) {
		this.rolDocuId = rolDocuId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOCUMENTO_ID", nullable = false)
	public Documento getDocumento() {
		return this.documento;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "ROL_ID", nullable = false)
	public Rol getRol() {
		return this.rol;
	}

	public void setRol(Rol rol) {
		this.rol = rol;
	}
	
	@NotNull
	@Column(name = "GRABAR_IMPR", nullable = false)
	public Boolean getGrabarImpr() {
		return grabarImpr;
	}

	public void setGrabarImpr(Boolean grabarImpr) {
		this.grabarImpr = grabarImpr;
	}

	@NotNull
	@Column(name = "PREDET", nullable = false)
	public Boolean getPredet() {
		return predet;
	}

	public void setPredet(Boolean predet) {
		this.predet = predet;
	}

	@NotNull
	@Column(name = "ACCESO", nullable = false)
	public Boolean getAcceso() {
		return acceso;
	}

	public void setAcceso(Boolean acceso) {
		this.acceso = acceso;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((documento == null) ? 0 : documento.hashCode());
		result = prime * result + ((rol == null) ? 0 : rol.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		RolDocu other = (RolDocu) obj;
		if (documento == null) {
			if (other.documento != null)
				return false;
		} else if (!documento.equals(other.documento))
			return false;
		if (rol == null) {
			if (other.rol != null)
				return false;
		} else if (!rol.equals(other.rol))
			return false;
		return true;
	}
	
}
