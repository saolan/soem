package ec.com.tecnointel.soem.ingreso.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.validation.constraints.Pattern;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ec.com.tecnointel.soem.parametro.modelo.Dimm;
import ec.com.tecnointel.soem.parametro.modelo.Persona;

/**
 * PersProv generated by hbm2java
 */
@Entity
@Table(name = "pers_prov")
@NamedEntityGraph(name = "persProv.Graph", attributeNodes = {
@NamedAttributeNode(value = "provGrup"), 	
@NamedAttributeNode(value = "dimm") })
public class PersProv implements java.io.Serializable {

	private Integer personaId;
	private Dimm dimm;
	private Persona persona;
	private ProvGrup provGrup;
	private String razonSoci;
	private String codigoPais;
	private String natura;
	private String autori;
	private LocalDate fechaAuto;
	private boolean parteRela;
	private boolean exonerIva;
	private boolean retienRent;
	private boolean retienIva;
	private String nota;
	private boolean estado;
	private Set<Ingreso> ingresos = new HashSet<Ingreso>(0);

	private static final long serialVersionUID = -8766024328211015417L;

	public PersProv() {
	}
	
//	Constructor A
	public PersProv(Persona persona) {
		this.persona = persona;
	}
	
//	Constructor B encadenado con A
	public PersProv(Persona persona, boolean estado) {
		this(persona);
		this.estado = estado;
	}

	@Id
	@GenericGenerator(name = "idPersProv", strategy = "foreign", parameters = @Parameter(name = "property", value = "persona"))
	@GeneratedValue(generator = "idPersProv")
	// @TableGenerator(name = "idPersProv", table = "Secuencial", pkColumnName =
	// "secuencial_id", pkColumnValue = "41", valueColumnName = "numero",
	// allocationSize = 1)
	// @GeneratedValue(strategy = GenerationType.TABLE, generator =
	// "idPersProv")
	@Column(name = "PERSONA_ID", unique = true, nullable = false)
	public Integer getPersonaId() {
		return this.personaId;
	}

	public void setPersonaId(Integer personaId) {
		this.personaId = personaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIMM_ID", nullable = false)
	public Dimm getDimm() {
		return this.dimm;
	}

	public void setDimm(Dimm dimm) {
		this.dimm = dimm;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@PrimaryKeyJoinColumn
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROV_GRUP_ID", nullable = false)
	public ProvGrup getProvGrup() {
		return this.provGrup;
	}

	public void setProvGrup(ProvGrup provGrup) {
		this.provGrup = provGrup;
	}

	@Column(name = "RAZON_SOCI", length = 100)
	public String getRazonSoci() {
		return this.razonSoci;
	}

	public void setRazonSoci(String razonSoci) {
		this.razonSoci = razonSoci;
	}

	@Column(name = "CODIGO_PAIS", nullable = true, length = 32)
	public String getCodigoPais() {
		return this.codigoPais;
	}

	public void setCodigoPais(String codigoPais) {
		this.codigoPais = codigoPais;
	}
	
	@Column(name = "PARTE_RELA", nullable = true, length = 2)
	public boolean isParteRela() {
		return parteRela;
	}

	public void setParteRela(boolean parteRela) {
		this.parteRela = parteRela;
	}

	@Column(name = "NATURA", nullable = true, length = 2)
	public String getNatura() {
		return this.natura;
	}

	public void setNatura(String natura) {
		this.natura = natura;
	}

	@Pattern(regexp = "^[0-9]*", message = "Este campo acepta valores num√©ricos")
	@Column(name = "AUTORI", nullable = false, length = 13)
	public String getAutori() {
		return this.autori;
	}

	public void setAutori(String autori) {
		this.autori = autori;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_AUTO", nullable = false, length = 10)
	public LocalDate getFechaAuto() {
		return fechaAuto;
	}

	public void setFechaAuto(LocalDate fechaAuto) {
		this.fechaAuto = fechaAuto;
	}

	@Column(name = "EXONER_IVA", nullable = false)
	public boolean isExonerIva() {
		return this.exonerIva;
	}

	public void setExonerIva(boolean exonerIva) {
		this.exonerIva = exonerIva;
	}

	@Column(name = "RETIEN_RENT", nullable = false)
	public boolean isRetienRent() {
		return this.retienRent;
	}

	public void setRetienRent(boolean retienRent) {
		this.retienRent = retienRent;
	}

	@Column(name = "RETIEN_IVA", nullable = false)
	public boolean isRetienIva() {
		return this.retienIva;
	}

	public void setRetienIva(boolean retienIva) {
		this.retienIva = retienIva;
	}

	@Column(name = "NOTA")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persProv")
	public Set<Ingreso> getIngresos() {
		return this.ingresos;
	}

	public void setIngresos(Set<Ingreso> ingresos) {
		this.ingresos = ingresos;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((personaId == null) ? 0 : personaId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PersProv other = (PersProv) obj;
		if (personaId == null) {
			if (other.personaId != null)
				return false;
		} else if (!personaId.equals(other.personaId))
			return false;
		return true;
	}
}
