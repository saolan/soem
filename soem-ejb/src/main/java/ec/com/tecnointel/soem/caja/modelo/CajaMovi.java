package ec.com.tecnointel.soem.caja.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.NamedSubgraph;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.Size;

import ec.com.tecnointel.soem.contabilidad.modelo.Transaccion;
import ec.com.tecnointel.soem.egreso.modelo.Egreso;
import ec.com.tecnointel.soem.parametro.modelo.DocuCaja;
import ec.com.tecnointel.soem.parametro.modelo.Sucursal;

/**
 * CajaMovi generated by hbm2java
 */
@Entity
@Table(name = "caja_movi")
@NamedEntityGraph(name = "cajaMovi.Graph", attributeNodes = { 
@NamedAttributeNode(value = "sucursal"),
@NamedAttributeNode(value = "docuCaja", subgraph = "documento.Graph"),
@NamedAttributeNode(value = "caja"),
@NamedAttributeNode(value = "persCaje") } ,
subgraphs = {
		@NamedSubgraph(name = "documento.Graph",attributeNodes = { 
		@NamedAttributeNode(value = "documento") }) })
public class CajaMovi implements java.io.Serializable {

	private Integer cajaMoviId;
	private Caja caja;
	private CajaMovi cajaMovi;
	private DocuCaja docuCaja;
	private PersCaje persCaje;
	private Sucursal sucursal;
	private Transaccion transaccion;
	private long numero;
	private LocalDate fecha;
	private LocalDateTime fechaHora;
	private LocalDateTime fechaHoraRegi;
	private String nota;
	private Boolean estado;
	private Set<CajaMovi> cajaMovis = new HashSet<CajaMovi>(0);
	private Set<Egreso> egresos = new HashSet<Egreso>(0);
	private Set<CajaMoviFormPago> cajaMoviFormPagos = new HashSet<CajaMoviFormPago>(0);
	private Set<CajaMoviTran> cajaMoviTrans = new HashSet<CajaMoviTran>(0);

	private static final long serialVersionUID = 1825265969152606597L;

	public CajaMovi() {
	}

	@Id
	@TableGenerator(name = "idCajaMovi", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "caja_movi", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idCajaMovi")
	@Column(name = "CAJA_MOVI_ID", unique = true, nullable = false)
	public Integer getCajaMoviId() {
		return this.cajaMoviId;
	}

	public void setCajaMoviId(Integer cajaMoviId) {
		this.cajaMoviId = cajaMoviId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAJA_ID", nullable = false)
	public Caja getCaja() {
		return this.caja;
	}

	public void setCaja(Caja caja) {
		this.caja = caja;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAJA_MOVI_SUPE_ID")
	public CajaMovi getCajaMovi() {
		return this.cajaMovi;
	}

	public void setCajaMovi(CajaMovi cajaMovi) {
		this.cajaMovi = cajaMovi;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOCUMENTO_ID", nullable = false)
	public DocuCaja getDocuCaja() {
		return this.docuCaja;
	}

	public void setDocuCaja(DocuCaja docuCaja) {
		this.docuCaja = docuCaja;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSONA_ID", nullable = false)
	public PersCaje getPersCaje() {
		return this.persCaje;
	}

	public void setPersCaje(PersCaje persCaje) {
		this.persCaje = persCaje;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUCURSAL_ID", nullable = false)
	public Sucursal getSucursal() {
		return this.sucursal;
	}

	public void setSucursal(Sucursal sucursal) {
		this.sucursal = sucursal;
	}
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRANSACCION_ID")
	public Transaccion getTransaccion() {
		return this.transaccion;
	}

	public void setTransaccion(Transaccion transaccion) {
		this.transaccion = transaccion;
	}

	@Column(name = "NUMERO", nullable = true, precision = 10, scale = 0)
	public long getNumero() {
		return this.numero;
	}

	public void setNumero(long numero) {
		this.numero = numero;
	}

	@Column(columnDefinition = "DATE", name = "FECHA", nullable = false, length = 10)
	public LocalDate getFecha() {
		return fecha;
	}

	public void setFecha(LocalDate fecha) {
		this.fecha = fecha;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA", nullable = false, length = 19)
	public LocalDateTime getFechaHora() {
		return fechaHora;
	}

	public void setFechaHora(LocalDateTime fechaHora) {
		this.fechaHora = fechaHora;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_REGI", nullable = false, length = 19)
	public LocalDateTime getFechaHoraRegi() {
		return fechaHoraRegi;
	}

	public void setFechaHoraRegi(LocalDateTime fechaHoraRegi) {
		this.fechaHoraRegi = fechaHoraRegi;
	}
	
	@Column(name = "NOTA")
	@Size(max = 255, message = "Nota no debe sobrepasar los 255 caracteres")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = false)
	public Boolean getEstado() {
		return estado;
	}

	public void setEstado(Boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cajaMovi")
	public Set<CajaMovi> getCajaMovis() {
		return this.cajaMovis;
	}

	public void setCajaMovis(Set<CajaMovi> cajaMovis) {
		this.cajaMovis = cajaMovis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cajaMovi")
	public Set<Egreso> getEgresos() {
		return this.egresos;
	}

	public void setEgresos(Set<Egreso> egresos) {
		this.egresos = egresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cajaMovi")
	public Set<CajaMoviFormPago> getCajaMoviFormPagos() {
		return this.cajaMoviFormPagos;
	}

	public void setCajaMoviFormPagos(Set<CajaMoviFormPago> cajaMoviFormPagos) {
		this.cajaMoviFormPagos = cajaMoviFormPagos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cajaMovi")
	public Set<CajaMoviTran> getCajaMoviTrans() {
		return cajaMoviTrans;
	}

	public void setCajaMoviTrans(Set<CajaMoviTran> cajaMoviTrans) {
		this.cajaMoviTrans = cajaMoviTrans;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CajaMovi other = (CajaMovi) obj;
		if (cajaMoviId == null) {
			if (other.cajaMoviId != null)
				return false;
		} else if (!cajaMoviId.equals(other.cajaMoviId))
			return false;
		return true;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cajaMoviId == null) ? 0 : cajaMoviId.hashCode());
		return result;
	}
	
	@PrePersist
	public void previoPersist () {
		this.setFechaHoraRegi(LocalDateTime.now());
	}
}
