package ec.com.tecnointel.soem.ingreso.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Size;

import ec.com.tecnointel.soem.contabilidad.modelo.Transaccion;
import ec.com.tecnointel.soem.parametro.modelo.Bodega;
import ec.com.tecnointel.soem.parametro.modelo.Dimm;
import ec.com.tecnointel.soem.parametro.modelo.DocuIngr;
import ec.com.tecnointel.soem.parametro.modelo.Sucursal;
import ec.com.tecnointel.soem.tesoreria.modelo.Cxp;

/**
 * Ingreso generated by hbm2java
 */
@Entity
@Table(name = "ingreso")
@NamedEntityGraph(name = "ingreso.Graph", attributeNodes = { @NamedAttributeNode(value = "sucursal"),
		@NamedAttributeNode(value = "docuIngr"), @NamedAttributeNode(value = "persProv"),
		@NamedAttributeNode(value = "dimm"), @NamedAttributeNode(value = "transaccion"),
		@NamedAttributeNode(value = "ingreso") })
public class Ingreso implements java.io.Serializable {

	private Integer ingresoId;
	private Bodega bodega;
	private Dimm dimm;
	private DocuIngr docuIngr;
	private Ingreso ingreso;
	private PersProv persProv;
	private Sucursal sucursal;
	private Transaccion transaccion;
	private LocalDate fechaRegi;
	private LocalDate fechaEmis;
	private LocalDateTime fechaHoraRegi;
	private LocalDateTime fechaHoraEmis;
	private LocalDateTime fechaAuto;
	private String serie1;
	private String serie2;
	private Integer numero;
	private String autori;
	private String claveAcce;
	private BigDecimal descue;
	private short numeroCuot;
	private short diasPlaz;
	private Integer numeroGuia;
	private Integer numeroRete;
	private BigDecimal total;
	private String nota;
	private String estado;
	private Set<Cxp> cxps = new HashSet<Cxp>(0);
	private Set<IngrDeta> ingrDetas = new HashSet<IngrDeta>(0);
	private Set<Retencion> retencions = new HashSet<Retencion>(0);
	private Set<Ingreso> ingresos = new HashSet<Ingreso>(0);
//	private Set<IngrDimm> ingrDimms = new HashSet<>(0);
	private String estadoDocuElec;
	private String motivoRech;

	private String leyen1;
	private String leyen2;
	private String msgInfoAdic;

	private static final long serialVersionUID = 7232027617935457653L;

	public Ingreso() {
	}

	public Ingreso(Sucursal sucursal, DocuIngr docuIngr, PersProv persProv) {
		this.sucursal = sucursal;
		this.docuIngr = docuIngr;
		this.persProv = persProv;
	}

//	Constructor para duplicar egreso
	public Ingreso(Ingreso ingreso) {

		this.bodega = ingreso.getBodega();
//		Se le quita para que no ponga en documento del cual se esta convirtiendo
//		sino no deja anular porque se confunde pensando que es una nota de credito
//		this.ingreso = ingreso;
		this.dimm = ingreso.dimm;
		this.persProv = ingreso.getPersProv();
		this.sucursal = ingreso.getSucursal();
//		Se quita para que al convertir no ponga el numero de transaccion
//		sino al anular el document convertido, tambien se anula la transaccion del documento original
//		this.transaccion = ingreso.getTransaccion();
		this.fechaRegi = ingreso.getFechaRegi();
		this.fechaEmis = ingreso.getFechaEmis();
		this.fechaAuto = ingreso.getFechaAuto();
		this.serie1 = ingreso.getSerie1();
		this.serie2 = ingreso.getSerie2();
		this.numero = ingreso.getNumero();
		this.descue = ingreso.getDescue();
		this.numeroCuot = ingreso.getNumeroCuot();
		this.diasPlaz = ingreso.getDiasPlaz();
		this.autori = ingreso.getAutori();
		this.claveAcce = ingreso.getClaveAcce();
		this.numeroGuia = ingreso.getNumeroGuia();
		this.numeroRete = ingreso.getNumeroRete();
		this.total = ingreso.getTotal();
		this.nota = ingreso.getNota();
		this.estado = ingreso.getEstado();
		this.estadoDocuElec = "NO ENVIADO";
		this.leyen1 = ingreso.leyen1;
		this.leyen2 = ingreso.leyen2;
		this.msgInfoAdic = ingreso.msgInfoAdic;

//		Esto no va aqui porque los detalles se graban manualmente en ventaControl 
//	    this.egreDetas.addAll(egreso.getEgreDetas());
	}

	@Id
	@TableGenerator(name = "idIngreso", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "ingreso", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idIngreso")
	@Column(name = "INGRESO_ID", unique = true, nullable = false)
	public Integer getIngresoId() {
		return this.ingresoId;
	}

	public void setIngresoId(Integer ingresoId) {
		this.ingresoId = ingresoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BODEGA_ID", nullable = false)
	public Bodega getBodega() {
		return this.bodega;
	}

	public void setBodega(Bodega bodega) {
		this.bodega = bodega;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DIMM_ID", nullable = false)
	public Dimm getDimm() {
		return this.dimm;
	}

	public void setDimm(Dimm dimm) {
		this.dimm = dimm;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOCUMENTO_ID", nullable = false)
	public DocuIngr getDocuIngr() {
		return this.docuIngr;
	}

	public void setDocuIngr(DocuIngr docuIngr) {
		this.docuIngr = docuIngr;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INGRESO_SUPE_ID")
	public Ingreso getIngreso() {
		return this.ingreso;
	}

	public void setIngreso(Ingreso ingreso) {
		this.ingreso = ingreso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSONA_ID", nullable = false)
	public PersProv getPersProv() {
		return this.persProv;
	}

	public void setPersProv(PersProv persProv) {
		this.persProv = persProv;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUCURSAL_ID", nullable = false)
	public Sucursal getSucursal() {
		return this.sucursal;
	}

	public void setSucursal(Sucursal sucursal) {
		this.sucursal = sucursal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRANSACCION_ID")
	public Transaccion getTransaccion() {
		return this.transaccion;
	}

	public void setTransaccion(Transaccion transaccion) {
		this.transaccion = transaccion;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_REGI", nullable = false, length = 10)
	public LocalDate getFechaRegi() {
		return fechaRegi;
	}

	public void setFechaRegi(LocalDate fechaRegi) {
		this.fechaRegi = fechaRegi;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_EMIS", nullable = false, length = 10)
	public LocalDate getFechaEmis() {
		return fechaEmis;
	}

	public void setFechaEmis(LocalDate fechaEmis) {
		this.fechaEmis = fechaEmis;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_REGI", nullable = false, length = 19)
	public LocalDateTime getFechaHoraRegi() {
		return fechaHoraRegi;
	}

	public void setFechaHoraRegi(LocalDateTime fechaHoraRegi) {
		this.fechaHoraRegi = fechaHoraRegi;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_EMIS", nullable = false, length = 19)
	public LocalDateTime getFechaHoraEmis() {
		return fechaHoraEmis;
	}

	public void setFechaHoraEmis(LocalDateTime fechaHoraEmis) {
		this.fechaHoraEmis = fechaHoraEmis;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_AUTO", nullable = false, length = 19)
	public LocalDateTime getFechaAuto() {
		return fechaAuto;
	}

	public void setFechaAuto(LocalDateTime fechaAuto) {
		this.fechaAuto = fechaAuto;
	}

	@Column(name = "SERIE1", nullable = false, length = 3)
	@Size(max = 3, min = 3, message = "El valor de serie1 debe tener tres dígitos")
	public String getSerie1() {
		return this.serie1;
	}

	public void setSerie1(String serie1) {
		this.serie1 = serie1;
	}

	@Column(name = "SERIE2", nullable = false, length = 3)
	@Size(max = 3, min = 3, message = "El valor de serie2 debe tener tres dígitos")
	public String getSerie2() {
		return this.serie2;
	}

	public void setSerie2(String serie2) {
		this.serie2 = serie2;
	}

	@Column(name = "NUMERO", nullable = false, precision = 9, scale = 0)
	@Max(999999999)
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Column(name = "AUTORI", nullable = false, length = 60)
	@Size(max = 49, min = 10, message = "El valor debe tener entre diez y cuarenta y nueve dígitos")
	public String getAutori() {
		return this.autori;
	}

	public void setAutori(String autori) {
		this.autori = autori;
	}

	@Column(name = "CLAVE_ACCE", nullable = false, length = 60)
	public String getClaveAcce() {
		return this.claveAcce;
	}

	public void setClaveAcce(String claveAcce) {
		this.claveAcce = claveAcce;
	}

	@Min(0)
	@Column(name = "DESCUE", nullable = false, precision = 8, scale = 4)
	public BigDecimal getDescue() {
		return this.descue;
	}

	public void setDescue(BigDecimal descue) {
		this.descue = descue;
	}

	@Min(1)
	@Column(name = "NUMERO_CUOT", nullable = false)
	public short getNumeroCuot() {
		return this.numeroCuot;
	}

	public void setNumeroCuot(short numeroCuot) {
		this.numeroCuot = numeroCuot;
	}

	@Min(0)
	@Column(name = "DIAS_PLAZ", nullable = false)
	public short getDiasPlaz() {
		return this.diasPlaz;
	}

	public void setDiasPlaz(short diasPlaz) {
		this.diasPlaz = diasPlaz;
	}

	@Column(name = "NUMERO_GUIA", nullable = false)
	public Integer getNumeroGuia() {
		return numeroGuia;
	}

	public void setNumeroGuia(Integer numeroGuia) {
		this.numeroGuia = numeroGuia;
	}

	@Column(name = "NUMERO_RETE", nullable = false)
	public Integer getNumeroRete() {
		return numeroRete;
	}

	public void setNumeroRete(Integer numeroRete) {
		this.numeroRete = numeroRete;
	}

	@Column(name = "TOTAL", nullable = false, precision = 14, scale = 6)
	public BigDecimal getTotal() {
		return total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "NOTA")
	@Size(max = 255, message = "Nota no debe sobrepasar los 255 caracteres")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = true)
	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Column(name = "ESTADO_DOCU_ELEC", nullable = false)
	public String getEstadoDocuElec() {
		return estadoDocuElec;
	}

	public void setEstadoDocuElec(String estadoDocuElec) {
		this.estadoDocuElec = estadoDocuElec;
	}

	@Column(name = "MOTIVO_RECH")
	public String getMotivoRech() {
		return motivoRech;
	}

	public void setMotivoRech(String motivoRech) {
		this.motivoRech = motivoRech;
	}

	@Column(name = "LEYEN1")
	public String getLeyen1() {
		return leyen1;
	}

	public void setLeyen1(String leyen1) {
		this.leyen1 = leyen1;
	}

	@Column(name = "LEYEN2")
	public String getLeyen2() {
		return leyen2;
	}

	public void setLeyen2(String leyen2) {
		this.leyen2 = leyen2;
	}

	@Column(name = "MSG_INFO_ADIC")
	public String getMsgInfoAdic() {
		return msgInfoAdic;
	}

	public void setMsgInfoAdic(String msgInfoAdic) {
		this.msgInfoAdic = msgInfoAdic;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingreso")
	public Set<Cxp> getCxps() {
		return this.cxps;
	}

	public void setCxps(Set<Cxp> cxps) {
		this.cxps = cxps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingreso")
	public Set<IngrDeta> getIngrDetas() {
		return this.ingrDetas;
	}

	public void setIngrDetas(Set<IngrDeta> ingrDetas) {
		this.ingrDetas = ingrDetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingreso")
	public Set<Retencion> getRetencions() {
		return this.retencions;
	}

	public void setRetencions(Set<Retencion> retencions) {
		this.retencions = retencions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingreso")
	public Set<Ingreso> getIngresos() {
		return this.ingresos;
	}

	public void setIngresos(Set<Ingreso> ingresos) {
		this.ingresos = ingresos;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingreso")
//	public Set<IngrDimm> getIngrDimms() {
//		return ingrDimms;
//	}
//
//	public void setIngrDimms(Set<IngrDimm> ingrDimms) {
//		this.ingrDimms = ingrDimms;
//	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((ingresoId == null) ? 0 : ingresoId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Ingreso other = (Ingreso) obj;
		if (ingresoId == null) {
			if (other.ingresoId != null)
				return false;
		} else if (!ingresoId.equals(other.ingresoId))
			return false;
		return true;
	}
}
