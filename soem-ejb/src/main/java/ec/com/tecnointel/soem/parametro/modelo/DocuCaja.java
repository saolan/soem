package ec.com.tecnointel.soem.parametro.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ec.com.tecnointel.soem.caja.modelo.CajaMovi;

/**
 * DocuCaja generated by hbm2java
 */
@Entity
@Table(name = "docu_caja")
public class DocuCaja implements java.io.Serializable {

	private Integer documentoId;
	private Documento documento;
	private boolean abreCaja;
	private Set<CajaMovi> cajaMovis = new HashSet<CajaMovi>(0);

	private static final long serialVersionUID = -213474314928920012L;

	public DocuCaja() {
	}

	public DocuCaja(Documento documento, boolean abreCaja) {
		this.documento = documento;
		this.abreCaja = abreCaja;
	}

	public DocuCaja(Documento documento, boolean abreCaja, Set<CajaMovi> cajaMovis) {
		this.documento = documento;
		this.abreCaja = abreCaja;
		this.cajaMovis = cajaMovis;
	}

	@Id
	@GenericGenerator(name = "idDocuCaja", strategy = "foreign", parameters = @Parameter(name = "property", value = "documento"))
	@GeneratedValue(generator = "idDocuCaja")
	// @TableGenerator(name = "idDocuCaja", table = "Secuencial", pkColumnName =
	// "secuencial_id", pkColumnValue = "14", valueColumnName = "numero",
	// allocationSize = 1)
	// @GeneratedValue(strategy = GenerationType.TABLE, generator =
	// "idDocuCaja")
	@Column(name = "DOCUMENTO_ID", unique = true, nullable = false)
	public Integer getDocumentoId() {
		return this.documentoId;
	}

	public void setDocumentoId(Integer documentoId) {
		this.documentoId = documentoId;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@PrimaryKeyJoinColumn
	public Documento getDocumento() {
		return this.documento;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	@Column(name = "ABRE_CAJA", nullable = false)
	public boolean isAbreCaja() {
		return abreCaja;
	}

	public void setAbreCaja(boolean abreCaja) {
		this.abreCaja = abreCaja;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "docuCaja")
	public Set<CajaMovi> getCajaMovis() {
		return this.cajaMovis;
	}

	public void setCajaMovis(Set<CajaMovi> cajaMovis) {
		this.cajaMovis = cajaMovis;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((documentoId == null) ? 0 : documentoId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DocuCaja other = (DocuCaja) obj;
		if (documentoId == null) {
			if (other.documentoId != null)
				return false;
		} else if (!documentoId.equals(other.documentoId))
			return false;
		return true;
	}

}
