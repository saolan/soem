package ec.com.tecnointel.soem.inventario.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Transient;
import javax.validation.constraints.Size;

import ec.com.tecnointel.soem.egreso.modelo.EgreDeta;
import ec.com.tecnointel.soem.ingreso.modelo.IngrDeta;
import ec.com.tecnointel.soem.parametro.modelo.Dimm;

/**
 * Producto generated by hbm2java
 */
@Entity
@Table(name = "producto")
@NamedEntityGraph(name = "producto.Graph", attributeNodes = { 
		@NamedAttributeNode(value = "prodTipo"),
		@NamedAttributeNode(value = "prodGrup") })
public class Producto implements java.io.Serializable {

	private Integer productoId;
	private ProdGrup prodGrup;
	private ProdTipo prodTipo;
	private Producto producto;
	private String codigo;
	private String codigoBarra;
	private boolean balanz;
	private String descri;
	private String controStoc;
	private String imagen;
	private LocalDate fechaCrea;
	private String nota;
	private boolean estado;
	private Set<EgreDeta> egreDetas = new HashSet<EgreDeta>(0);
	private Set<ProdBode> prodBodes = new HashSet<ProdBode>(0);
	private Set<ProdCost> prodCosts = new HashSet<ProdCost>(0);
	private Set<Producto> productos = new HashSet<Producto>(0);
	private Set<ProdDimm> prodDimms = new HashSet<ProdDimm>(0);
	private Set<ProdPrec> prodPrecs = new HashSet<ProdPrec>(0);
	private Set<IngrDeta> ingrDetas = new HashSet<IngrDeta>(0);
	private Set<Kardex> kardexs = new HashSet<Kardex>(0);
	private Set<TomaFisiDeta> tomaFisiDetas = new HashSet<TomaFisiDeta>(0);

//	private Set<ProdSubp> prodSubps = new HashSet<ProdSubp>(0);
//	private Set<ProdSubp> prodSubpsProducto = new HashSet<ProdSubp>(0);
//	private Set<ProdSubp> prodSubpsSubProducto = new HashSet<ProdSubp>(0);

//	@Transient
	private String controlMaxMin;
	private BigDecimal maximo;
	private BigDecimal minimo;
	private BigDecimal stockActual;

//	Se utiliza para mostrar el porcentaje del iva en la pagina de compras
	private Dimm dimm;

//	Se utiliza para mostrar los costos en la pagina de compras
	private ProdCost prodCost;

	private static final long serialVersionUID = -1387503093681492094L;

	public Producto() {
	}

	public Producto(ProdGrup prodGrup, String codigoBarra, String codigo, String descri, boolean estado) {
		this.prodGrup = prodGrup;
		this.codigo = codigo;
		this.codigoBarra = codigoBarra;
		this.descri = descri;
		this.estado = estado;
	}

	@Id
	@TableGenerator(name = "idProducto", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "producto", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idProducto")
	@Column(name = "PRODUCTO_ID", unique = true, nullable = false)
	public Integer getProductoId() {
		return this.productoId;
	}

	public void setProductoId(Integer productoId) {
		this.productoId = productoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROD_GRUP_ID", nullable = false)
	public ProdGrup getProdGrup() {
		return this.prodGrup;
	}

	public void setProdGrup(ProdGrup prodGrup) {
		this.prodGrup = prodGrup;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROD_TIPO_ID", nullable = false)
	public ProdTipo getProdTipo() {
		return this.prodTipo;
	}

	public void setProdTipo(ProdTipo prodTipo) {
		this.prodTipo = prodTipo;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCTO_SUPE_ID")
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

//	@Size(max=25) este controla el numero de digitos
//	length = 32 este es cuando se crea la base desde aqui para que ponga en tama√±o del campo
	@Column(name = "CODIGO", nullable = false, length = 32)
	@Size(max = 25)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "CODIGO_BARRA", nullable = false, length = 32)
	@Size(max = 25)
	public String getCodigoBarra() {
		return this.codigoBarra;
	}

	public void setCodigoBarra(String codigoBarra) {
		this.codigoBarra = codigoBarra;
	}

	@Column(name = "BALANZ", nullable = false)
	public boolean isBalanz() {
		return this.balanz;
	}

	public void setBalanz(boolean balanz) {
		this.balanz = balanz;
	}

	@Column(name = "DESCRI", nullable = false, length = 100)
	public String getDescri() {
		return this.descri;
	}

	public void setDescri(String descri) {
		this.descri = descri;
	}

	@Column(name = "CONTRO_STOC", nullable = false, length = 12)
	public String getControStoc() {
		return controStoc;
	}

	public void setControStoc(String controStoc) {
		this.controStoc = controStoc;
	}

	@Column(name = "IMAGEN")
	public String getImagen() {
		return this.imagen;
	}

	public void setImagen(String imagen) {
		this.imagen = imagen;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_CREA", nullable = false, length = 10)
	public LocalDate getFechaCrea() {
		return fechaCrea;
	}

	public void setFechaCrea(LocalDate fechaCrea) {
		this.fechaCrea = fechaCrea;
	}

	@Column(name = "NOTA")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@Transient
	public String getControlMaxMin() {
		return controlMaxMin;
	}

	public void setControlMaxMin(String controlMaxMin) {
		this.controlMaxMin = controlMaxMin;
	}

	@Transient
	public BigDecimal getMaximo() {
		return maximo;
	}

	public void setMaximo(BigDecimal maximo) {
		this.maximo = maximo;
	}

	@Transient
	public BigDecimal getMinimo() {
		return minimo;
	}

	public void setMinimo(BigDecimal minimo) {
		this.minimo = minimo;
	}

	@Transient
	public BigDecimal getStockActual() {
		return stockActual;
	}

	public void setStockActual(BigDecimal stockActual) {
		this.stockActual = stockActual;
	}

	@Transient
	public Dimm getDimm() {
		return dimm;
	}

	public void setDimm(Dimm dimm) {
		this.dimm = dimm;
	}

	@Transient
	public ProdCost getProdCost() {
		return prodCost;
	}

	public void setProdCost(ProdCost prodCost) {
		this.prodCost = prodCost;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<EgreDeta> getEgreDetas() {
		return this.egreDetas;
	}

	public void setEgreDetas(Set<EgreDeta> egreDetas) {
		this.egreDetas = egreDetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProdBode> getProdBodes() {
		return this.prodBodes;
	}

	public void setProdBodes(Set<ProdBode> prodBodes) {
		this.prodBodes = prodBodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProdCost> getProdCosts() {
		return this.prodCosts;
	}

	public void setProdCosts(Set<ProdCost> prodCosts) {
		this.prodCosts = prodCosts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Producto> getProductos() {
		return this.productos;
	}

	public void setProductos(Set<Producto> productos) {
		this.productos = productos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProdDimm> getProdDimms() {
		return this.prodDimms;
	}

	public void setProdDimms(Set<ProdDimm> prodDimms) {
		this.prodDimms = prodDimms;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<ProdPrec> getProdPrecs() {
		return this.prodPrecs;
	}

	public void setProdPrecs(Set<ProdPrec> prodPrecs) {
		this.prodPrecs = prodPrecs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<IngrDeta> getIngrDetas() {
		return this.ingrDetas;
	}

	public void setIngrDetas(Set<IngrDeta> ingrDetas) {
		this.ingrDetas = ingrDetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<Kardex> getKardexs() {
		return this.kardexs;
	}

	public void setKardexs(Set<Kardex> kardexs) {
		this.kardexs = kardexs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
	public Set<TomaFisiDeta> getTomaFisiDetas() {
		return this.tomaFisiDetas;
	}

	public void setTomaFisiDetas(Set<TomaFisiDeta> tomaFisiDetas) {
		this.tomaFisiDetas = tomaFisiDetas;
	}

//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "producto")
//	public Set<ProdSubp> getProdSubps() {
//		return this.prodSubps;
//	}
//
//	public void setProdSubps(Set<ProdSubp> prodSubps) {
//		this.prodSubps = prodSubps;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productoSubProducto")
//	public Set<ProdSubp> getProdSubpsSubProducto() {
//		return this.prodSubpsSubProducto;
//	}
//
//	public void setProdSubpsSubProducto(Set<ProdSubp> prodSubpsSubProducto) {
//		this.prodSubpsSubProducto = prodSubpsSubProducto;
//	}
//
//	@OneToMany(fetch = FetchType.LAZY, mappedBy = "productoProducto")
//	public Set<ProdSubp> getProdSubpsProducto() {
//		return this.prodSubpsProducto;
//	}
//
//	public void setProdSubpsProducto(Set<ProdSubp> prodSubpsProducto) {
//		this.prodSubpsProducto = prodSubpsProducto;
//	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((productoId == null) ? 0 : productoId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Producto other = (Producto) obj;
		if (productoId == null) {
			if (other.productoId != null)
				return false;
		} else if (!productoId.equals(other.productoId))
			return false;
		return true;
	}
}
