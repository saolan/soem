package ec.com.tecnointel.soem.contabilidad.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.Size;

import ec.com.tecnointel.soem.caja.modelo.CajaMoviTran;
import ec.com.tecnointel.soem.egreso.modelo.EgreTran;
import ec.com.tecnointel.soem.egreso.modelo.Egreso;
import ec.com.tecnointel.soem.ingreso.modelo.Ingreso;
import ec.com.tecnointel.soem.parametro.modelo.DocuTran;
import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviEgre;
import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviIngr;

/**
 * Transaccion generated by hbm2java
 */
@Entity
@Table(name = "transaccion")
@NamedEntityGraph(name = "transaccion.Graph", attributeNodes = {
		@NamedAttributeNode(value = "docuTran")
	}
)
public class Transaccion implements java.io.Serializable {

	private Integer transaccionId;
	private DocuTran docuTran;
	private Integer numero;
	private LocalDate fechaRegi;
	private LocalDate fechaEmis;
	private LocalDateTime fechaHoraRegi;
	private LocalDateTime fechaHoraEmis;
	private BigDecimal totalDebe;
	private BigDecimal totalHabe;
	private BigDecimal difere;
	private String nota;
	private String estado;
	
	private Set<Ingreso> ingresos = new HashSet<Ingreso>(0);
	private Set<Egreso> egresos = new HashSet<Egreso>(0);
	private Set<FormPagoMoviIngr> formPagoMoviIngrs = new HashSet<FormPagoMoviIngr>(0);
	private Set<FormPagoMoviEgre> formPagoMoviEgres = new HashSet<FormPagoMoviEgre>(0);
	private Set<TranDeta> tranDetas = new HashSet<TranDeta>(0);

	private Set<CajaMoviTran> cajaMoviTrans = new HashSet<CajaMoviTran>(0);
	private Set<EgreTran> EgreTrans = new HashSet<EgreTran>(0);
	
	private static final long serialVersionUID = 6263915887615701233L;

	public Transaccion() {
	}


	@Id
	@TableGenerator(name = "idTransaccion", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "transaccion", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idTransaccion")
	@Column(name = "TRANSACCION_ID", unique = true, nullable = false)
	public Integer getTransaccionId() {
		return this.transaccionId;
	}

	public void setTransaccionId(Integer transaccionId) {
		this.transaccionId = transaccionId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOCUMENTO_ID", nullable = false)
	public DocuTran getDocuTran() {
		return this.docuTran;
	}

	public void setDocuTran(DocuTran docuTran) {
		this.docuTran = docuTran;
	}

	@Column(name = "NUMERO", nullable = false, precision = 10, scale = 0)
	public Integer getNumero() {
		return numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_REGI", nullable = false, length = 10)
	public LocalDate getFechaRegi() {
		return fechaRegi;
	}

	public void setFechaRegi(LocalDate fechaRegi) {
		this.fechaRegi = fechaRegi;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_EMIS", nullable = false, length = 10)
	public LocalDate getFechaEmis() {
		return fechaEmis;
	}

	public void setFechaEmis(LocalDate fechaEmis) {
		this.fechaEmis = fechaEmis;
	}
	
	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_REGI", nullable = false, length = 19)
	public LocalDateTime getFechaHoraRegi() {
		return fechaHoraRegi;
	}

	public void setFechaHoraRegi(LocalDateTime fechaHoraRegi) {
		this.fechaHoraRegi = fechaHoraRegi;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_EMIS", nullable = false, length = 19)
	public LocalDateTime getFechaHoraEmis() {
		return fechaHoraEmis;
	}

	public void setFechaHoraEmis(LocalDateTime fechaHoraEmis) {
		this.fechaHoraEmis = fechaHoraEmis;
	}

	@Column(name = "TOTAL_DEBE", nullable = false, precision = 14, scale = 6)
	public BigDecimal getTotalDebe() {
		return totalDebe;
	}

	public void setTotalDebe(BigDecimal totalDebe) {
		this.totalDebe = totalDebe;
	}

	@Column(name = "TOTAL_HABE", nullable = false, precision = 14, scale = 6)
	public BigDecimal getTotalHabe() {
		return totalHabe;
	}

	public void setTotalHabe(BigDecimal totalHabe) {
		this.totalHabe = totalHabe;
	}

	@Column(name = "DIFERE", nullable = false, precision = 14, scale = 6)
	public BigDecimal getDifere() {
		return difere;
	}

	@Column(name = "NOTA", nullable = true)
	@Size(max = 255, message = "Nota no debe sobrepasar los 255 caracteres")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = false)
	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<FormPagoMoviIngr> getFormPagoMoviIngrs() {
		return this.formPagoMoviIngrs;
	}

	public void setFormPagoMoviIngrs(Set<FormPagoMoviIngr> formPagoMoviIngrs) {
		this.formPagoMoviIngrs = formPagoMoviIngrs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<Egreso> getEgresos() {
		return this.egresos;
	}

	public void setEgresos(Set<Egreso> egresos) {
		this.egresos = egresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<FormPagoMoviEgre> getFormPagoMoviEgres() {
		return this.formPagoMoviEgres;
	}

	public void setFormPagoMoviEgres(Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<Ingreso> getIngresos() {
		return this.ingresos;
	}

	public void setIngresos(Set<Ingreso> ingresos) {
		this.ingresos = ingresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<TranDeta> getTranDetas() {
		return this.tranDetas;
	}

	public void setTranDetas(Set<TranDeta> tranDetas) {
		this.tranDetas = tranDetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<CajaMoviTran> getCajaMoviTrans() {
		return cajaMoviTrans;
	}

	public void setCajaMoviTrans(Set<CajaMoviTran> cajaMoviTrans) {
		this.cajaMoviTrans = cajaMoviTrans;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "transaccion")
	public Set<EgreTran> getEgreTrans() {
		return EgreTrans;
	}

	public void setEgreTrans(Set<EgreTran> egreTrans) {
		EgreTrans = egreTrans;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((transaccionId == null) ? 0 : transaccionId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Transaccion other = (Transaccion) obj;
		if (transaccionId == null) {
			if (other.transaccionId != null)
				return false;
		} else if (!transaccionId.equals(other.transaccionId))
			return false;
		return true;
	}

	public void setDifere(BigDecimal difere) {
		this.difere = difere;
	}
}
