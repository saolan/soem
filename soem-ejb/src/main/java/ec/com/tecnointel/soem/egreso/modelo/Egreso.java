package ec.com.tecnointel.soem.egreso.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.NamedSubgraph;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.Size;

import ec.com.tecnointel.soem.caja.modelo.CajaMovi;
import ec.com.tecnointel.soem.contabilidad.modelo.Transaccion;
import ec.com.tecnointel.soem.parametro.modelo.Bodega;
import ec.com.tecnointel.soem.parametro.modelo.DocuEgre;
import ec.com.tecnointel.soem.parametro.modelo.Mesa;
import ec.com.tecnointel.soem.parametro.modelo.Sucursal;
import ec.com.tecnointel.soem.tesoreria.modelo.Cxc;

/**
 * Egreso generated by hbm2java
 */
@Entity
@Table(name = "egreso")
@NamedEntityGraph(name = "egreso.Graph", attributeNodes = {
	@NamedAttributeNode(value = "egreso"),
	@NamedAttributeNode(value = "mesa"),
	@NamedAttributeNode(value = "docuEgre", subgraph = "dimmDocuEgre.Graph"),
	@NamedAttributeNode(value = "persClie", subgraph = "dimmPersClie.Graph"), 
	@NamedAttributeNode(value = "persVend"),
	@NamedAttributeNode(value = "sucursal"),
	@NamedAttributeNode(value = "cajaMovi", subgraph = "caja.Graph"),
	
},
subgraphs = { 
		@NamedSubgraph (
			name = "caja.Graph", attributeNodes = {
				@NamedAttributeNode(value = "caja")
			} ),
		@NamedSubgraph (
			name = "dimmDocuEgre.Graph", attributeNodes = {
				@NamedAttributeNode(value = "dimm")
			}),
		@NamedSubgraph (
				name = "dimmPersClie.Graph", attributeNodes = {
					@NamedAttributeNode(value = "dimm")
				})
	}
)
public class Egreso implements java.io.Serializable {

	private Integer egresoId;
	private Bodega bodega;
	private CajaMovi cajaMovi;
	private DocuEgre docuEgre;
	private Egreso egreso;
	private Mesa mesa;
	private PersClie persClie;
	private PersVend persVend;
	private Sucursal sucursal;
	private Transaccion transaccion;
	private LocalDate fechaRegi;
	private LocalDate fechaEmis;
	private LocalDateTime fechaHoraRegi;
	private LocalDateTime fechaHoraEmis;
	private LocalDateTime fechaAuto;
	private String serie1;
	private String serie2;
	private Integer numero;
	private BigDecimal descue;
	private short numeroCuot;
	private short diasPlaz;
	private String autori;
	private String claveAcce;
	private BigDecimal total;
	private String nota;
	private String estado;
	private String estadoDocuElec;
	private String motivoRech;
	private String leyen1;
	private String leyen2;
	private String msgInfoAdic;

	private Set<EgreDeta> egreDetas = new HashSet<EgreDeta>(0);
	private Set<Egreso> egresos = new HashSet<Egreso>(0);
	private Set<Cxc> cxcs = new HashSet<Cxc>(0);
	private Set<EgreTran> EgreTrans = new HashSet<EgreTran>(0);

	private Set<EgreNota> egreNotas = new HashSet<EgreNota>(0);
	
	private static final long serialVersionUID = 3474186525186493586L;

	public Egreso() {
	}
    
//	Constructor para duplicar egreso
	public Egreso(Egreso egreso) {
	 	
		this.bodega = egreso.getBodega();
		this.cajaMovi = egreso.getCajaMovi();
		this.docuEgre = egreso.getDocuEgre();
//		Se le quita para que no ponga en documento del cual se esta convirtiendo
//		sino no deja anular porque se confunde pensando que es una nota de credito
//		this.egreso = egreso;
		this.mesa = egreso.getMesa();
		this.persClie = egreso.getPersClie();
		this.persVend = egreso.getPersVend();
		this.sucursal = egreso.getSucursal();
//		Se quita para que al convertir no ponga el numero de transaccion
//		sino al anular el document convertido, tambien se anula la transaccion del documento original		
//		this.transaccion = egreso.getTransaccion();
		this.fechaRegi = egreso.getFechaRegi();
		this.fechaEmis = egreso.getFechaEmis();
		this.fechaAuto = egreso.getFechaAuto();
		this.serie1 = egreso.getSerie1();
		this.serie2 = egreso.getSerie2();
		this.numero = egreso.getNumero();
		this.descue = egreso.getDescue();
		this.numeroCuot = egreso.getNumeroCuot();
		this.diasPlaz = egreso.getDiasPlaz();
		this.autori = egreso.getAutori();
		this.claveAcce = egreso.getClaveAcce();
		this.total = egreso.getTotal();
		this.estado = egreso.getEstado();
		this.estadoDocuElec = egreso.getEstadoDocuElec();
		this.motivoRech = egreso.getMotivoRech();
 
//		Leyen1 y leyen2 se graban al grabarEgreso() en ventaControl;
//		Esto no va aqui porque los detalles se graban manualmente en ventaControl 
//	    this.egreDetas.addAll(egreso.getEgreDetas());
	}
	
//    public void llenarEgreDetas(EgreDeta egreDeta) {
//    }

	@Id
	@TableGenerator(name = "idEgreso", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "egreso", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idEgreso")
	@Column(name = "EGRESO_ID", unique = true, nullable = false)
	public Integer getEgresoId() {
		return this.egresoId;
	}

	public void setEgresoId(Integer egresoId) {
		this.egresoId = egresoId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "BODEGA_ID", nullable = false)
	public Bodega getBodega() {
		return this.bodega;
	}

	public void setBodega(Bodega bodega) {
		this.bodega = bodega;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CAJA_MOVI_ID", nullable = false)
	public CajaMovi getCajaMovi() {
		return this.cajaMovi;
	}

	public void setCajaMovi(CajaMovi cajaMovi) {
		this.cajaMovi = cajaMovi;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "DOCUMENTO_ID", nullable = false)
	public DocuEgre getDocuEgre() {
		return this.docuEgre;
	}

	public void setDocuEgre(DocuEgre docuEgre) {
		this.docuEgre = docuEgre;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EGRESO_SUPE_ID")
	public Egreso getEgreso() {
		return this.egreso;
	}

	public void setEgreso(Egreso egreso) {
		this.egreso = egreso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "MESA_ID", nullable = false)
	public Mesa getMesa() {
		return this.mesa;
	}

	public void setMesa(Mesa mesa) {
		this.mesa = mesa;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERSONA_ID", nullable = false)
	public PersClie getPersClie() {
		return this.persClie;
	}

	public void setPersClie(PersClie persClie) {
		this.persClie = persClie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PERS_VEND_ID", nullable = false)
	public PersVend getPersVend() {
		return this.persVend;
	}

	public void setPersVend(PersVend persVend) {
		this.persVend = persVend;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "SUCURSAL_ID", nullable = false)
	public Sucursal getSucursal() {
		return this.sucursal;
	}

	public void setSucursal(Sucursal sucursal) {
		this.sucursal = sucursal;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "TRANSACCION_ID")
	public Transaccion getTransaccion() {
		return this.transaccion;
	}

	public void setTransaccion(Transaccion transaccion) {
		this.transaccion = transaccion;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_REGI", nullable = false, length = 10)
	public LocalDate getFechaRegi() {
		return fechaRegi;
	}

	public void setFechaRegi(LocalDate fechaRegi) {
		this.fechaRegi = fechaRegi;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_EMIS", nullable = false, length = 10)
	public LocalDate getFechaEmis() {
		return fechaEmis;
	}

	public void setFechaEmis(LocalDate fechaEmis) {
		this.fechaEmis = fechaEmis;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_REGI", nullable = false, length = 19)
	public LocalDateTime getFechaHoraRegi() {
		return fechaHoraRegi;
	}

	public void setFechaHoraRegi(LocalDateTime fechaHoraRegi) {
		this.fechaHoraRegi = fechaHoraRegi;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_EMIS", nullable = false, length = 19)
	public LocalDateTime getFechaHoraEmis() {
		return fechaHoraEmis;
	}

	public void setFechaHoraEmis(LocalDateTime fechaHoraEmis) {
		this.fechaHoraEmis = fechaHoraEmis;
	}
	
	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_AUTO", nullable = false, length = 19)
	public LocalDateTime getFechaAuto() {
		return fechaAuto;
	}

	public void setFechaAuto(LocalDateTime fechaAuto) {
		this.fechaAuto = fechaAuto;
	}

	@Column(name = "SERIE1", nullable = false, length = 3)
	public String getSerie1() {
		return this.serie1;
	}

	public void setSerie1(String serie1) {
		this.serie1 = serie1;
	}

	@Column(name = "SERIE2", nullable = false, length = 3)
	public String getSerie2() {
		return this.serie2;
	}

	public void setSerie2(String serie2) {
		this.serie2 = serie2;
	}

	@Column(name = "NUMERO", nullable = false, precision = 10, scale = 0)
	public Integer getNumero() {
		return this.numero;
	}

	public void setNumero(Integer numero) {
		this.numero = numero;
	}

	@Max(value = 100)
	@Min(0)
	@Column(name = "DESCUE", nullable = false, precision = 8, scale = 4)
	public BigDecimal getDescue() {
		return this.descue;
	}

	public void setDescue(BigDecimal descue) {
		this.descue = descue;
	}

	@Min(1)
	@Column(name = "NUMERO_CUOT", nullable = false)
	public short getNumeroCuot() {
		return this.numeroCuot;
	}

	public void setNumeroCuot(short numeroCuot) {
		this.numeroCuot = numeroCuot;
	}

	@Min(0)
	@Column(name = "DIAS_PLAZ", nullable = false)
	public short getDiasPlaz() {
		return this.diasPlaz;
	}

	public void setDiasPlaz(short diasPlaz) {
		this.diasPlaz = diasPlaz;
	}

	@Column(name = "AUTORI", nullable = false, length = 60)
	public String getAutori() {
		return this.autori;
	}

	public void setAutori(String autori) {
		this.autori = autori;
	}

	@Column(name = "CLAVE_ACCE", nullable = false, length = 60)
	public String getClaveAcce() {
		return this.claveAcce;
	}

	public void setClaveAcce(String claveAcce) {
		this.claveAcce = claveAcce;
	}

	@Column(name = "TOTAL", nullable = false, precision = 14, scale = 6)
	public BigDecimal getTotal() {
		return total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "NOTA")
	@Size(max = 255, message = "Nota no debe sobrepasar los 255 caracteres")
	public String getNota() {
		return this.nota;
	}

	public void setNota(String nota) {
		this.nota = nota;
	}

	@Column(name = "ESTADO", nullable = false)
	public String getEstado() {
		return estado;
	}

	public void setEstado(String estado) {
		this.estado = estado;
	}

	@Column(name = "ESTADO_DOCU_ELEC", nullable = false)
	public String getEstadoDocuElec() {
		return estadoDocuElec;
	}

	public void setEstadoDocuElec(String estadoDocuElec) {
		this.estadoDocuElec = estadoDocuElec;
	}

	@Column(name = "MOTIVO_RECH")
	public String getMotivoRech() {
		return motivoRech;
	}
	
	public void setMotivoRech(String motivoRech) {
		this.motivoRech = motivoRech;
	}

	@Column(name = "LEYEN1")
	public String getLeyen1() {
		return leyen1;
	}

	public void setLeyen1(String leyen1) {
		this.leyen1 = leyen1;
	}

	@Column(name = "LEYEN2")
	public String getLeyen2() {
		return leyen2;
	}

	public void setLeyen2(String leyen2) {
		this.leyen2 = leyen2;
	}
	
	@Column(name = "MSG_INFO_ADIC")
	public String getMsgInfoAdic() {
		return msgInfoAdic;
	}

	public void setMsgInfoAdic(String msgInfoAdic) {
		this.msgInfoAdic = msgInfoAdic;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "egreso")
	public Set<EgreDeta> getEgreDetas() {
		return this.egreDetas;
	}

	public void setEgreDetas(Set<EgreDeta> egreDetas) {
		this.egreDetas = egreDetas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "egreso")
	public Set<Egreso> getEgresos() {
		return this.egresos;
	}

	public void setEgresos(Set<Egreso> egresos) {
		this.egresos = egresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "egreso")
	public Set<Cxc> getCxcs() {
		return this.cxcs;
	}

	public void setCxcs(Set<Cxc> cxcs) {
		this.cxcs = cxcs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "egreso")
	public Set<EgreTran> getEgreTrans() {
		return EgreTrans;
	}

	public void setEgreTrans(Set<EgreTran> egreTrans) {
		EgreTrans = egreTrans;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "egreso")
	public Set<EgreNota> getEgreNotas() {
		return egreNotas;
	}

	public void setEgreNotas(Set<EgreNota> egreNotas) {
		this.egreNotas = egreNotas;
	}
	
	@PrePersist
	public void previoPersist () {
		this.setFechaRegi(LocalDate.now());
		this.setFechaHoraRegi(LocalDateTime.now());
	}
	
	@PreUpdate
	public void previoUpdate () {
		this.setFechaRegi(LocalDate.now());
		this.setFechaHoraRegi(LocalDateTime.now());
	}
}
