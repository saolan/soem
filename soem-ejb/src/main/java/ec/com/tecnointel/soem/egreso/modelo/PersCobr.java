package ec.com.tecnointel.soem.egreso.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ec.com.tecnointel.soem.parametro.modelo.Persona;
import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviEgre;

/**
 * PersCobr generated by hbm2java
 */
@Entity
@Table(name = "pers_cobr")
public class PersCobr implements java.io.Serializable {

	private Integer personaId;
	private Persona persona;
	private boolean estado;
	private Set<FormPagoMoviEgre> formPagoMoviEgres = new HashSet<FormPagoMoviEgre>(0);

	private static final long serialVersionUID = -747698138326411968L;

	public PersCobr() {
	}

	public PersCobr(Persona persona, boolean estado) {
		this.persona = persona;
		this.estado = estado;
	}

	public PersCobr(Persona persona, boolean estado, Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.persona = persona;
		this.estado = estado;
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@Id
	@GenericGenerator(name = "idPersCobr", strategy = "foreign", parameters = @Parameter(name = "property", value = "persona"))
	@GeneratedValue(generator = "idPersCobr")
	// @TableGenerator(name = "idPersCobr", table = "Secuencial", pkColumnName =
	// "secuencial_id", pkColumnValue = "39", valueColumnName = "numero",
	// allocationSize = 1)
	// @GeneratedValue(strategy = GenerationType.TABLE, generator =
	// "idPersCobr")
	@Column(name = "PERSONA_ID", unique = true, nullable = false)
	public Integer getPersonaId() {
		return this.personaId;
	}

	public void setPersonaId(Integer personaId) {
		this.personaId = personaId;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@PrimaryKeyJoinColumn
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persCobr")
	public Set<FormPagoMoviEgre> getFormPagoMoviEgres() {
		return this.formPagoMoviEgres;
	}

	public void setFormPagoMoviEgres(Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((personaId == null) ? 0 : personaId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		PersCobr other = (PersCobr) obj;
		if (personaId == null) {
			if (other.personaId != null)
				return false;
		} else if (!personaId.equals(other.personaId))
			return false;
		return true;
	}

}
