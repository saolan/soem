package ec.com.tecnointel.soem.parametro.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;

import ec.com.tecnointel.soem.egreso.modelo.Egreso;
import ec.com.tecnointel.soem.ingreso.modelo.Ingreso;
import ec.com.tecnointel.soem.inventario.modelo.Kardex;
import ec.com.tecnointel.soem.inventario.modelo.ProdBode;
import ec.com.tecnointel.soem.inventario.modelo.TomaFisi;
import ec.com.tecnointel.soem.seguridad.modelo.RolBode;

/**
 * Bodega generated by hbm2java
 */
@Entity
@Table(name = "bodega")
public class Bodega implements java.io.Serializable {

	private Integer bodegaId;
	private String descri;
	private boolean estado;
	private Set<RolBode> rolBodes = new HashSet<RolBode>(0);
	private Set<ProdBode> prodBodes = new HashSet<ProdBode>(0);
	private Set<Egreso> egresos = new HashSet<Egreso>(0);
	private Set<Ingreso> ingresos = new HashSet<Ingreso>(0);
	private Set<SucuBode> sucuBodes = new HashSet<SucuBode>(0);
	private Set<Kardex> kardexs = new HashSet<Kardex>(0);
	private Set<TomaFisi> tomaFisis = new HashSet<TomaFisi>(0);

	private static final long serialVersionUID = 8821586212982670494L;

	public Bodega() {
	}

	public Bodega(Integer bodegaId) {
		this.bodegaId = bodegaId;
	}

	@Id
	@TableGenerator(name = "idBodega", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "bodega", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idBodega")
	@Column(name = "BODEGA_ID", unique = true, nullable = false)
	public Integer getBodegaId() {
		return this.bodegaId;
	}

	public void setBodegaId(Integer bodegaId) {
		this.bodegaId = bodegaId;
	}

	@Column(name = "DESCRI", nullable = false, length = 100)
	public String getDescri() {
		return this.descri;
	}

	public void setDescri(String descri) {
		this.descri = descri;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<RolBode> getRolBodes() {
		return this.rolBodes;
	}

	public void setRolBodes(Set<RolBode> rolBodes) {
		this.rolBodes = rolBodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<ProdBode> getProdBodes() {
		return this.prodBodes;
	}

	public void setProdBodes(Set<ProdBode> prodBodes) {
		this.prodBodes = prodBodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<Egreso> getEgresos() {
		return this.egresos;
	}

	public void setEgresos(Set<Egreso> egresos) {
		this.egresos = egresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<Ingreso> getIngresos() {
		return this.ingresos;
	}

	public void setIngresos(Set<Ingreso> ingresos) {
		this.ingresos = ingresos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<SucuBode> getSucuBodes() {
		return this.sucuBodes;
	}

	public void setSucuBodes(Set<SucuBode> sucuBodes) {
		this.sucuBodes = sucuBodes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "bodega")
	public Set<Kardex> getKardexs() {
		return kardexs;
	}

	public void setKardexs(Set<Kardex> kardexs) {
		this.kardexs = kardexs;
	}

	@OneToMany(fetch=FetchType.LAZY, mappedBy="bodega")
    public Set<TomaFisi> getTomaFisis() {
        return this.tomaFisis;
    }
    
    public void setTomaFisis(Set<TomaFisi> tomaFisis) {
        this.tomaFisis = tomaFisis;
    }

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((bodegaId == null) ? 0 : bodegaId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Bodega other = (Bodega) obj;
		if (bodegaId == null) {
			if (other.bodegaId != null)
				return false;
		} else if (!bodegaId.equals(other.bodegaId))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return String.format("%s[bodegaId=%d]", getClass().getSimpleName(), getBodegaId());
	}
}
