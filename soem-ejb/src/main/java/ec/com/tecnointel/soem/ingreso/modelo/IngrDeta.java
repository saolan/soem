package ec.com.tecnointel.soem.ingreso.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Transient;
import javax.validation.constraints.DecimalMin;

import ec.com.tecnointel.soem.inventario.modelo.Kardex;
import ec.com.tecnointel.soem.inventario.modelo.Producto;
import ec.com.tecnointel.soem.parametro.modelo.Precio;

/**
 * IngrDeta generated by hbm2java
 */
@Entity
@Table(name = "ingr_deta")
@NamedEntityGraph(name = "ingrDeta.Graph", attributeNodes = {
		@NamedAttributeNode(value = "producto"),
		@NamedAttributeNode(value = "ingreso"),
		@NamedAttributeNode(value = "precio"),
})
public class IngrDeta implements java.io.Serializable {

	private Integer ingrDetaId;
	private Ingreso ingreso;
	private Producto producto;
	private Precio precio;
	private LocalDate fechaRegi;
	private LocalDateTime fechaHoraRegi;
	private BigDecimal cantid;
	private BigDecimal factor;
	private BigDecimal costo;
	private BigDecimal costoNeto;
	private BigDecimal promoc;
	private BigDecimal descue;
	private BigDecimal descueValo;
	private Set<IngrDetaImpu> ingrDetaImpus = new HashSet<IngrDetaImpu>(0);
	private Set<IngrDetaPrec> ingrDetaPrecs = new HashSet<IngrDetaPrec>(0);
	private Set<Kardex> kardexs = new HashSet<Kardex>(0);

//	@Transient
	private BigDecimal total;
	private BigDecimal precioConImpu;
	private BigDecimal totalPrecioConImpu;

	private static final long serialVersionUID = -8169582753061129883L;

	public IngrDeta() {
	}
	
	public IngrDeta(Ingreso ingreso) {
		this.ingreso = ingreso;
	}

	public IngrDeta(Ingreso ingreso, Producto producto, Precio precio, LocalDate fechaRegi, LocalDateTime fechaHoraRegi,
			BigDecimal cantid, BigDecimal factor, BigDecimal costo, BigDecimal costoNeto, BigDecimal promoc,
			BigDecimal descue, BigDecimal descueValo, BigDecimal precioConImpu) {
		this(ingreso);
		this.producto = producto;
		this.precio = precio;
		this.precioConImpu = precioConImpu;
		this.fechaRegi = fechaRegi;
		this.fechaHoraRegi = fechaHoraRegi;
		this.cantid = cantid;
		this.factor = factor;
		this.costo = costo;
		this.costoNeto = costoNeto;
		this.promoc = promoc;
		this.descue = descue;
		this.descueValo = descueValo;
	}

	@Id
	@TableGenerator(name = "idIngrDeta", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "ingr_deta", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idIngrDeta")
	@Column(name = "INGR_DETA_ID", unique = true, nullable = false)
	public Integer getIngrDetaId() {
		return this.ingrDetaId;
	}

	public void setIngrDetaId(Integer ingrDetaId) {
		this.ingrDetaId = ingrDetaId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "INGRESO_ID", nullable = false)
	public Ingreso getIngreso() {
		return this.ingreso;
	}

	public void setIngreso(Ingreso ingreso) {
		this.ingreso = ingreso;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRODUCTO_ID", nullable = false)
	public Producto getProducto() {
		return this.producto;
	}

	public void setProducto(Producto producto) {
		this.producto = producto;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PRECIO_ID", nullable = false)
	public Precio getPrecio() {
		return precio;
	}

	public void setPrecio(Precio precio) {
		this.precio = precio;
	}
	
	@Column(columnDefinition = "DATE", name = "FECHA_REGI", nullable = false, length = 10)
	public LocalDate getFechaRegi() {
		return fechaRegi;
	}

	public void setFechaRegi(LocalDate fechaRegi) {
		this.fechaRegi = fechaRegi;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_REGI", nullable = false, length = 19)
	public LocalDateTime getFechaHoraRegi() {
		return fechaHoraRegi;
	}

	public void setFechaHoraRegi(LocalDateTime fechaHoraRegi) {
		this.fechaHoraRegi = fechaHoraRegi;
	}

	@Column(name = "CANTID", nullable = false, precision = 12, scale = 6)
	@DecimalMin(value = "0.0001", message="No se permite valores negativos")
	public BigDecimal getCantid() {
		return this.cantid;
	}

	public void setCantid(BigDecimal cantid) {
		this.cantid = cantid;
	}

	@Column(name = "FACTOR", nullable = false, precision = 12, scale = 6)
	public BigDecimal getFactor() {
		return factor;
	}

	public void setFactor(BigDecimal factor) {
		this.factor = factor;
	}
	
	@Column(name = "COSTO", nullable = false, precision = 16, scale = 10)
	public BigDecimal getCosto() {
		return this.costo;
	}

	public void setCosto(BigDecimal costo) {
		this.costo = costo;
	}
	
	@Column(name = "COSTO_NETO", nullable = false, precision = 16, scale = 10)
	public BigDecimal getCostoNeto() {
		return costoNeto;
	}

	public void setCostoNeto(BigDecimal costoNeto) {
		this.costoNeto = costoNeto;
	}
	
	@Column(name = "PROMOC", nullable = false, precision = 12, scale = 6)
	public BigDecimal getPromoc() {
		return this.promoc;
	}

	public void setPromoc(BigDecimal promoc) {
		this.promoc = promoc;
	}

	@Column(name = "DESCUE", nullable = false, precision = 8, scale = 4)
	public BigDecimal getDescue() {
		return this.descue;
	}

	public void setDescue(BigDecimal descue) {
		this.descue = descue;
	}

	@Column(name = "DESCUE_VALO", nullable = false, precision = 6, scale = 6)
	public BigDecimal getDescueValo() {
		return descueValo;
	}

	public void setDescueValo(BigDecimal descueValo) {
		this.descueValo = descueValo;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingrDeta", cascade = { CascadeType.REMOVE})
	public Set<IngrDetaImpu> getIngrDetaImpus() {
		return this.ingrDetaImpus;
	}

	public void setIngrDetaImpus(Set<IngrDetaImpu> ingrDetaImpus) {
		this.ingrDetaImpus = ingrDetaImpus;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "ingrDeta", cascade = { CascadeType.PERSIST, CascadeType.MERGE,CascadeType.REMOVE})
	public Set<IngrDetaPrec> getIngrDetaPrecs() {
		return ingrDetaPrecs;
	}

	public void setIngrDetaPrecs(Set<IngrDetaPrec> ingrDetaPrecs) {
		this.ingrDetaPrecs = ingrDetaPrecs;
	}
	
	@OneToMany(fetch=FetchType.LAZY, mappedBy="ingrDeta")
    public Set<Kardex> getKardexs() {
        return this.kardexs;
    }
    
    public void setKardexs(Set<Kardex> kardexs) {
        this.kardexs = kardexs;
    }
    
    @Transient
    public BigDecimal getTotal() {
		return total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Transient
	public BigDecimal getPrecioConImpu() {
		return precioConImpu;
	}

	public void setPrecioConImpu(BigDecimal precioConImpu) {
		this.precioConImpu = precioConImpu;
	}

	@Transient
	public BigDecimal getTotalPrecioConImpu() {
		return totalPrecioConImpu;
	}

	public void setTotalPrecioConImpu(BigDecimal totalPrecioConImpu) {
		this.totalPrecioConImpu = totalPrecioConImpu;
	}
}
