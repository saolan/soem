package ec.com.tecnointel.soem.parametro.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.validation.constraints.Size;

import org.hibernate.validator.constraints.Email;

import ec.com.tecnointel.soem.caja.modelo.PersCaje;
import ec.com.tecnointel.soem.egreso.modelo.PersClie;
import ec.com.tecnointel.soem.egreso.modelo.PersCobr;
import ec.com.tecnointel.soem.egreso.modelo.PersVend;
import ec.com.tecnointel.soem.ingreso.modelo.PersProv;
import ec.com.tecnointel.soem.seguridad.modelo.PersUsua;
import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviEgre;
import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviIngr;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona")
public class Persona implements java.io.Serializable {

	private Integer personaId;
	private String cedulaRuc;
	private String apelli;
	private String nombre;
	private String direcc;
	private String telefo;
	private String correo;
	private LocalDate fechaNaci;
//	Este Campo ya no se va a usar pero es not null y todavia no se le borra
	private boolean estado;
	private Set<FormPagoMoviIngr> formPagoMoviIngrs = new HashSet<FormPagoMoviIngr>(0);
	private PersCaje persCaje;
	private PersClie persClie;
	private Set<PersPara> persParas = new HashSet<PersPara>(0);
	private Set<FormPagoMoviEgre> formPagoMoviEgres = new HashSet<FormPagoMoviEgre>(0);
	private PersUsua persUsua;
	private PersProv persProv;
	private PersCobr persCobr;
	private PersVend persVend;

	private static final long serialVersionUID = -4556840912711113837L;

	public Persona() {
	}
	
	public Persona(String cedulaRuc, String apelli, String nombre, boolean estado) {
		this.cedulaRuc = cedulaRuc;
		this.apelli = apelli;
		this.nombre = nombre;
		this.estado = estado;
	}

	@Id
	@TableGenerator(name = "idPersona", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "persona", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idPersona")
	@Column(name = "PERSONA_ID", unique = true, nullable = false)
	public Integer getPersonaId() {
		return this.personaId;
	}

	public void setPersonaId(Integer personaId) {
		this.personaId = personaId;
	}

	@Size(max = 13, message = ("Cedúla o ruc tiene mas de 13 digitos"))
//	@Pattern(regexp = "^[0-9]*", message = "Cedúla o ruc acepta solo valores numéricos")
	@Column(name = "CEDULA_RUC", nullable = false, length = 13)
	public String getCedulaRuc() {
		return this.cedulaRuc;
	}

	public void setCedulaRuc(String cedulaRuc) {
		this.cedulaRuc = cedulaRuc;
	}

	@Size(max = 100, message = ("Apellido tiene mas de 10 digitos"))
	@Column(name = "APELLI", nullable = false, length = 100)
	public String getApelli() {
		return this.apelli;
	}

	public void setApelli(String apelli) {
		this.apelli = apelli;
	}

	@Size(max = 100, message = ("Nombre tiene mas de 10 digitos"))
	@Column(name = "NOMBRE", length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Size(max = 100, message = ("Dirección tiene mas de 10 digitos"))
	@Column(name = "DIRECC", length = 100)
	public String getDirecc() {
		return direcc;
	}

	public void setDirecc(String direcc) {
		this.direcc = direcc;
	}

	@Size(max = 50, message = ("Teléfono tiene mas de 50 digitos"))
	@Column(name = "TELEFO", length = 50)
	public String getTelefo() {
		return telefo;
	}

	public void setTelefo(String telefo) {
		this.telefo = telefo;
	}

	@Email
	@Size(max = 100, message = ("Correo tiene mas de 100 digitos"))
	@Column(name = "CORREO", length = 100)
	public String getCorreo() {
		return correo;
	}

	public void setCorreo(String correo) {
		this.correo = correo;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_NACI", nullable = false, length = 10)
	public LocalDate getFechaNaci() {
		return fechaNaci;
	}

	public void setFechaNaci(LocalDate fechaNaci) {
		this.fechaNaci = fechaNaci;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<FormPagoMoviIngr> getFormPagoMoviIngrs() {
		return this.formPagoMoviIngrs;
	}

	public void setFormPagoMoviIngrs(Set<FormPagoMoviIngr> formPagoMoviIngrs) {
		this.formPagoMoviIngrs = formPagoMoviIngrs;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersCaje getPersCaje() {
		return this.persCaje;
	}

	public void setPersCaje(PersCaje persCaje) {
		this.persCaje = persCaje;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersClie getPersClie() {
		return this.persClie;
	}

	public void setPersClie(PersClie persClie) {
		this.persClie = persClie;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersPara> getPersParas() {
		return this.persParas;
	}

	public void setPersParas(Set<PersPara> persParas) {
		this.persParas = persParas;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<FormPagoMoviEgre> getFormPagoMoviEgres() {
		return this.formPagoMoviEgres;
	}

	public void setFormPagoMoviEgres(Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersUsua getPersUsua() {
		return this.persUsua;
	}

	public void setPersUsua(PersUsua persUsua) {
		this.persUsua = persUsua;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersProv getPersProv() {
		return this.persProv;
	}

	public void setPersProv(PersProv persProv) {
		this.persProv = persProv;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersCobr getPersCobr() {
		return this.persCobr;
	}

	public void setPersCobr(PersCobr persCobr) {
		this.persCobr = persCobr;
	}

	@OneToOne(fetch = FetchType.LAZY, mappedBy = "persona")
	public PersVend getPersVend() {
		return this.persVend;
	}

	public void setPersVend(PersVend persVend) {
		this.persVend = persVend;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((personaId == null) ? 0 : personaId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Persona other = (Persona) obj;
		if (personaId == null) {
			if (other.personaId != null)
				return false;
		} else if (!personaId.equals(other.personaId))
			return false;
		return true;
	}
}
