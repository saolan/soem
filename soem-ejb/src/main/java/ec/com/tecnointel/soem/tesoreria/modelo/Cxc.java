package ec.com.tecnointel.soem.tesoreria.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.math.BigDecimal;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.NamedSubgraph;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.TableGenerator;
import javax.persistence.Transient;

import ec.com.tecnointel.soem.egreso.modelo.Egreso;

/**
 * Cxc generated by hbm2java
 */
@Entity
@Table(name = "cxc")
@NamedEntityGraph(name = "cxc.Graph", attributeNodes =
{
	@NamedAttributeNode(value = "egreso", subgraph = "persClie.Graph"),
} , 
subgraphs = { @NamedSubgraph
				(
					name = "persClie.Graph", attributeNodes = {
						@NamedAttributeNode(value = "persClie")
					}
				)				
			}  
)
public class Cxc implements java.io.Serializable {

	private Integer cxcId;
	private Egreso egreso;
	private LocalDate fechaVenc;
	private LocalDateTime fechaHoraVenc;
	private BigDecimal total;
	private Boolean estado;
	private Set<CobrDeta> cobrDetas = new HashSet<CobrDeta>(0);
	
	private BigDecimal abono;
	private BigDecimal saldo;

	private static final long serialVersionUID = 1800129971575723044L;

	public Cxc() {
	}

	@Id
	@TableGenerator(name = "idCxc", table = "secuencial", pkColumnName = "tabla", pkColumnValue = "cxc", valueColumnName = "numero", allocationSize = 1)
	@GeneratedValue(strategy = GenerationType.TABLE, generator = "idCxc")
	@Column(name = "CXC_ID", unique = true, nullable = false)
	public Integer getCxcId() {
		return this.cxcId;
	}

	public void setCxcId(Integer cxcId) {
		this.cxcId = cxcId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "EGRESO_ID", nullable = false)
	public Egreso getEgreso() {
		return this.egreso;
	}

	public void setEgreso(Egreso egreso) {
		this.egreso = egreso;
	}

	@Column(columnDefinition = "DATE", name = "FECHA_VENC", nullable = false, length = 10)
	public LocalDate getFechaVenc() {
		return fechaVenc;
	}

	public void setFechaVenc(LocalDate fechaVenc) {
		this.fechaVenc = fechaVenc;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "FECHA_HORA_VENC", nullable = false, length = 19)
	public LocalDateTime getFechaHoraVenc() {
		return fechaHoraVenc;
	}

	public void setFechaHoraVenc(LocalDateTime fechaHoraVenc) {
		this.fechaHoraVenc = fechaHoraVenc;
	}

	@Column(name = "TOTAL", nullable = false, precision = 14, scale = 6)
	public BigDecimal getTotal() {
		return this.total;
	}

	public void setTotal(BigDecimal total) {
		this.total = total;
	}

	@Column(name = "ESTADO", nullable = false)
	public Boolean getEstado() {
		return estado;
	}

	public void setEstado(Boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "cxc")
	public Set<CobrDeta> getCobrDetas() {
		return this.cobrDetas;
	}

	public void setCobrDetas(Set<CobrDeta> cobrDetas) {
		this.cobrDetas = cobrDetas;
	}

	@Transient
	public BigDecimal getAbono() {
		return abono;
	}

	public void setAbono(BigDecimal abono) {
		this.abono = abono;
	}

	@Transient
	public BigDecimal getSaldo() {
		return saldo;
	}

	public void setSaldo(BigDecimal saldo) {
		this.saldo = saldo;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cxcId == null) ? 0 : cxcId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cxc other = (Cxc) obj;
		if (cxcId == null) {
			if (other.cxcId != null)
				return false;
		} else if (!cxcId.equals(other.cxcId))
			return false;
		return true;
	}
}
