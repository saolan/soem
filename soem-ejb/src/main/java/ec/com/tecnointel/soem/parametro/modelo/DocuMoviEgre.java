package ec.com.tecnointel.soem.parametro.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ec.com.tecnointel.soem.tesoreria.modelo.FormPagoMoviEgre;

/**
 * DocuMoviEgre generated by hbm2java
 */
@Entity
@Table(name = "docu_movi_egre")
public class DocuMoviEgre implements java.io.Serializable {

	private Integer documentoId;
	private String tipo;

	private Documento documento;
	private Set<FormPagoMoviEgre> formPagoMoviEgres = new HashSet<FormPagoMoviEgre>(0);

	private static final long serialVersionUID = 6587009342570288540L;

	public DocuMoviEgre() {
	}

	public DocuMoviEgre(Documento documento, String tipo) {
		this.documento = documento;
		this.tipo = tipo;
	}

	public DocuMoviEgre(Documento documento, String tipo, Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.documento = documento;
		this.tipo = tipo;
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@Id
	@GenericGenerator(name = "idDocuMoviEgre", strategy = "foreign", parameters = @Parameter(name = "property", value = "documento"))
	@GeneratedValue(generator = "idDocuMoviEgre")
	// @TableGenerator(name = "idDocuFormPago", table = "Secuencial",
	// pkColumnName = "secuencial_id", pkColumnValue = "16", valueColumnName =
	// "numero", allocationSize = 1)
	// @GeneratedValue(strategy = GenerationType.TABLE, generator =
	// "idDocuFormPago")
	@Column(name = "DOCUMENTO_ID", unique = true, nullable = false)
	public Integer getDocumentoId() {
		return this.documentoId;
	}

	public void setDocumentoId(Integer documentoId) {
		this.documentoId = documentoId;
	}

	@Column(name = "TIPO", nullable = false)
	public String getTipo() {
		return tipo;
	}

	public void setTipo(String tipo) {
		this.tipo = tipo;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@PrimaryKeyJoinColumn
	public Documento getDocumento() {
		return this.documento;
	}

	public void setDocumento(Documento documento) {
		this.documento = documento;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "docuMoviEgre")
	public Set<FormPagoMoviEgre> getFormPagoMoviEgres() {
		return this.formPagoMoviEgres;
	}

	public void setFormPagoMoviEgres(Set<FormPagoMoviEgre> formPagoMoviEgres) {
		this.formPagoMoviEgres = formPagoMoviEgres;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((documentoId == null) ? 0 : documentoId.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DocuMoviEgre other = (DocuMoviEgre) obj;
		if (documentoId == null) {
			if (other.documentoId != null)
				return false;
		} else if (!documentoId.equals(other.documentoId))
			return false;
		return true;
	}
}
