package ec.com.tecnointel.soem.seguridad.modelo;
// Generated 26-jul-2016 22:29:48 by Hibernate Tools 5.1.0.Alpha2

import java.time.LocalDateTime;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.NamedAttributeNode;
import javax.persistence.NamedEntityGraph;
import javax.persistence.NamedSubgraph;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;

import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

import ec.com.tecnointel.soem.parametro.modelo.Persona;

/**
 * PersUsua generated by hbm2java
 */
@Entity
@Table(name = "pers_usua")
@NamedEntityGraph(name = "persUsua.Graph", attributeNodes = {
@NamedAttributeNode(value = "rolPersUsuas", subgraph = "rol.Graph") },
subgraphs = {@NamedSubgraph(name = "rol.Graph",attributeNodes = { 
			@NamedAttributeNode("rol") })
})
public class PersUsua implements java.io.Serializable {

	private Integer personaId;
	private Persona persona;
	private String usuari;
	private String clave;
	private boolean caducaClav;
	private LocalDateTime caducaFechHora;
	private boolean estado;
	private Set<Auditoria> auditorias = new HashSet<Auditoria>(0);
	private Set<RolPersUsua> rolPersUsuas = new HashSet<RolPersUsua>(0);

	private static final long serialVersionUID = 3154654349070643494L;

	public PersUsua() {
	}

	public PersUsua(Persona persona, String usuari, String clave, boolean caducaClav, boolean estado) {
		this.persona = persona;
		this.usuari = usuari;
		this.clave = clave;
		this.caducaClav = caducaClav;
		this.estado = estado;
	}

	public PersUsua(Persona persona, String usuari, String clave, boolean caducaClav, LocalDateTime caducaFechHora, boolean estado,
			Set<Auditoria> auditorias, Set<RolPersUsua> rolPersUsuas) {
		this.persona = persona;
		this.usuari = usuari;
		this.clave = clave;
		this.caducaClav = caducaClav;
		this.caducaFechHora = caducaFechHora;
		this.estado = estado;
		this.auditorias = auditorias;
		this.rolPersUsuas = rolPersUsuas;
	}

	@Id
	@GenericGenerator(name = "idPersUsua", strategy = "foreign", parameters = @Parameter(name = "property", value = "persona"))
	@GeneratedValue(generator = "idPersUsua")
	// @TableGenerator(name = "idPersUsua", table = "Secuencial", pkColumnName =
	// "secuencial_id", pkColumnValue = "42", valueColumnName = "numero",
	// allocationSize = 1)
	// @GeneratedValue(strategy = GenerationType.TABLE, generator =
	// "idPersUsua")
	@Column(name = "PERSONA_ID", unique = true, nullable = false)
	public Integer getPersonaId() {
		return this.personaId;
	}

	public void setPersonaId(Integer personaId) {
		this.personaId = personaId;
	}

	@OneToOne(fetch = FetchType.LAZY, cascade = CascadeType.MERGE)
	@PrimaryKeyJoinColumn
	public Persona getPersona() {
		return this.persona;
	}

	public void setPersona(Persona persona) {
		this.persona = persona;
	}

	@Column(name = "USUARI", nullable = false, length = 100)
	public String getUsuari() {
		return this.usuari;
	}

	public void setUsuari(String usuari) {
		this.usuari = usuari;
	}

	@Column(name = "CLAVE", nullable = false)
	public String getClave() {
		return this.clave;
	}

	public void setClave(String clave) {
		this.clave = clave;
	}

	@Column(name = "CADUCA_CLAV", nullable = false)
	public boolean isCaducaClav() {
		return this.caducaClav;
	}

	public void setCaducaClav(boolean caducaClav) {
		this.caducaClav = caducaClav;
	}

	@Column(columnDefinition = "TIMESTAMP", name = "CADUCA_FECH_HORA", nullable = false, length = 19)
	public LocalDateTime getCaducaFechHora() {
		return caducaFechHora;
	}

	public void setCaducaFechHora(LocalDateTime caducaFechHora) {
		this.caducaFechHora = caducaFechHora;
	}

	@Column(name = "ESTADO", nullable = false)
	public boolean isEstado() {
		return this.estado;
	}

	public void setEstado(boolean estado) {
		this.estado = estado;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persUsua")
	public Set<Auditoria> getAuditorias() {
		return this.auditorias;
	}

	public void setAuditorias(Set<Auditoria> auditorias) {
		this.auditorias = auditorias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persUsua")
	public Set<RolPersUsua> getRolPersUsuas() {
		return this.rolPersUsuas;
	}

	public void setRolPersUsuas(Set<RolPersUsua> rolPersUsuas) {
		this.rolPersUsuas = rolPersUsuas;
	}
}
